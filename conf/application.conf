# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="changeme"
play.server.http.idleTimeout = null

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

# Registers the filters
# ~~~~~
play.filters.enabled += filters.ExampleFilter
play.filters.disabled += "play.filters.csp.CSPFilter"
play.filters.enabled += play.filters.cors.CORSFilter
play.filters.enabled += play.filters.csrf.CSRFFilter
play.filters.cors {
  pathPrefixes = ["/"]
  exposedHeaders = ["Set-Cookie"]
  allowedOrigins = ["http://localhost:8080", "http://192.168.2.103:8081", "https://gladiators-game.herokuapp.com", "http://gladiators-game.herokuapp.com"]
  allowedHttpMethods = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
  allowedHttpHeaders = [
    "Cookie",
    "Origin",
    "Accept",
    "Referer",
    "User-Agent",
    "Connection",
    "Accept-Encoding",
    "Accept-Language",
    "Host",
    "X-Requested-With",
    "Content-Type",
    "Access-Control-Request-Method",
    "Access-Control-Request-Headers"
    "Access-Control-Allow-Credentials",
    "Access-Control-Expose-Headers",
    ":scheme", ":authority", ":method", ":path",
  ]
  allowedHttpHeaders = null
  serveForbiddenOrigins = true
  preflightMaxAge = 3 days
  supportsCredentials = true
}

play.filters.hosts {
  allowed = ["."]
}
# The application DI modules
# ~~~~~
play.modules.enabled += "modules.BaseModule"
play.modules.enabled += "modules.JobModule"
play.modules.enabled += "modules.SilhouetteModule"
play.modules.enabled += "play.api.libs.mailer.MailerModule"
play.filters.headers.frameOptions = "allow-from https://gladiators.live"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"

# The asset configuration
# ~~~~~
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

# Akka config
akka {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off

  # Auth token cleaner
  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }
}

# Play mailer
play.mailer {
  host = "localhost"
  port = 25
  mock = true
}

# Security Filter Configuration - Content Security Policy
play.filters.csp {
  directives {
    default-src = "'self'"
    img-src = "'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com chart.googleapis.com"
    style-src = "'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com"
    font-src = "'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com"
    script-src = ${play.filters.csp.directives.script-src} "cdnjs.cloudflare.com"
    connect-src = "'self' twitter.com *.xing.com"
  }
}

include "silhouette.conf"